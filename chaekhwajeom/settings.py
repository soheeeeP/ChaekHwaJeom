"""
Django settings for chaekhwajeom project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

CONFIG_SECRET_FILE = os.path.join(BASE_DIR,'secret_key.json')

config_secret = json.loads(open(CONFIG_SECRET_FILE).read())

# OS_ENVIRON_KEY = config_secret['OS_ENVIRON']

def get_secret(setting,secret=config_secret):
    try:
        return config_secret[setting]
    except KeyError:
        error_msg = "Set the {0} environment variable".format(setting)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret("DJANGO_SECRET_KEY")
OS_ENVIRON_KEY = get_secret("OS_ENVIRON")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    'chaekhwajeom.pythonanywhere.com'    
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'books',
    'imagekit',
    'accounts',
    'chat',

    'django.contrib.sites',  # allauth


    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.naver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'chaekhwajeom.urls'

TEMPLATE_DIR = os.path.join(BASE_DIR,'templates')
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            TEMPLATE_DIR,
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'utils.processor.nav_context_processor',
            ],
        },
    },
]


WSGI_APPLICATION = 'chaekhwajeom.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    
    #'default' : {
    #    'ENGINE': 'django.db.backends.sqlite3',
    #    'NAME': os.path.join(BASE_DIR, 'db_sqlite3'),
    #}
    
     'default': {
         'ENGINE': 'django.db.backends.postgresql',
         'NAME': OS_ENVIRON_KEY['DATABASE']['NAME'],
         'USER': OS_ENVIRON_KEY['DATABASE']['USER'],
         'PASSWORD': OS_ENVIRON_KEY['DATABASE']['PASSWORD'],
         'HOST': OS_ENVIRON_KEY['DATABASE']['HOST'],
         'PORT': '11968',
     }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
#STATICFILES_DIRS = (
#    os.path.join(BASE_DIR,'static'),
#)

STATIC_ROOT = os.path.join(BASE_DIR,'static')

MEDIA_URL = '/upload/'
MEDIA_ROOT=os.path.join(BASE_DIR,'upload')

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_REQUIRED = False

# social 계정으로 회원가입시, auto signup mode를 끄고
# customizing된 signup form을 사용
# SOCIALACCOUNT_AUTO_SIGNUP = False
SOCIALACCOUNT_ADAPTER = 'accounts.adapter.SocialAccountAdapter'
# SOCIALACCOUNT_FORMS = {
#     'signup': 'accounts.forms.SocialAccountSignUpForm',
# }

# test@example.com , test
ACCOUNT_ADAPTER = 'accounts.adapter.AccountAdapter'

AUTH_USER_MODEL = 'accounts.MyUser'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)


SITE_ID=1

EMAIL_HOST = 'smtp.gmail.com'
# 메일을 호스트하는 서버
EMAIL_PORT = '587'
# gmail과의 통신하는 포트

EMAIL_HOST_USER = 'something@gmail.com'
# 발신할 이메일
EMAIL_HOST_PASSWORD = 'somethingpassword'

# 발신할 메일의 비밀번호
EMAIL_USE_TLS = True
# TLS 보안 방법
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# 사이트와 관련한 자동응답을 받을 이메일 주소
